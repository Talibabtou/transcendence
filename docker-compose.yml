version: '3.8'

services:
  cert-generator:
    image: alpine/openssl
    container_name: cert_generator
    entrypoint: ""
    volumes:
      - ./scripts:/scripts
      - certs_data:/etc/certs
    command: ["/bin/sh", "-c", "/scripts/generate-certs.sh && echo 'Cert generator finished'"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs_data:/etc/certs:ro
      - profile_pictures:/usr/share/nginx/html/uploads/profile_pictures
    depends_on:
      cert-generator:
        condition: service_completed_successfully
    restart: unless-stopped

  # backend: # Placeholder for your backend/gateway service
  #   build: ./backend
  #   container_name: backend_service
  #   ports:
  #     - "YOUR_BACKEND_PORT:YOUR_BACKEND_PORT"
  #   volumes:
  #     - certs_data:/etc/certs:ro # Mount certs read-only for your backend to use
  #   depends_on:
  #     cert-generator:
  #       condition: service_completed_successfully
  #   environment:
  #     # Example: Tell your backend where to find the certs if needed
  #     - SSL_CERT_PATH=/etc/certs/nginx.crt
  #     - SSL_KEY_PATH=/etc/certs/nginx.key
  #   restart: unless-stopped

volumes:
  certs_data:
  profile_pictures:

# volumes:
#   certs_data:
#     driver: local
#     driver_opts:
#       type: none
#       device: "/home/bboissen/sgoinfre/certs_data"
#       o: bind
#   profile_pictures:
#     driver: local
#     driver_opts:
#       type: none
#       device: "/home/bboissen/sgoinfre/profile_pictures"
#       o: bind