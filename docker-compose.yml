services:

  randomizer:
    container_name: randomizer
    build: 
      context: ./game_script
    command: python /app/scripts/simulation.py
    restart: unless-stopped
    networks:
      - backend

  prometheus:
    image: prom/prometheus:v3.1.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      # Specify the configuration file for Prometheus
      - '--config.file=/etc/prometheus/prometheus.yml'
      # Set the path for Prometheus to store its time series database
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      # Specify the path for console libraries used in the web UI
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      # Specify the path for console templates used in the web UI
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - backend
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    networks:
      - backend
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg

  postgres_exporter:
    container_name: postgres_exporter
    image: prometheuscommunity/postgres-exporter:v0.16.0
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres_exporter:test@db:5432/postgres?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - backend


volumes:
  prometheus_data:

networks:
  backend: